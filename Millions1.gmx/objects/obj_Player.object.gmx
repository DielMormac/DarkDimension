<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables

downKey =0;

_currentJump = 0;
_numberOfJumps = 2;
_alpha = 1.0;
_alphaRise = false;

_side = 1;
_gravity = 2;
_velocity = 10;
_jumpSpeed = 24;
_hSpeed = 0;
_vSpeed = 0;

_hSpeedCarry = 0;
_hSpeedFinal = 0;

_isDead = false;
_isIdle = true;
_isJumping = false;
_isWalking = false;
_isAttacking = false;
_isHurt = false;
_invinsible = true;
_attackType = 0;

_canAttack1 = false;
_canAttack2 = false;
_canAttack3 = false;
_attack1Delay = 1;
_attack2Delay = 2;
_attack3Delay = 4;

alarm[0] = 1*room_speed;
alarm[1] = 2*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause){
    if(!_isHurt){
        _invinsible = false;   
    }else{
        _isHurt = false;
    }
}

alarm[1] = 2*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause){
    if(global.counter1 &gt; 0){
        global.counter1--;
    }
    
    if(global.counter2 &gt; 0){
        global.counter2--;
    }
    
    if(global.counter3 &gt; 0){
        global.counter3--;
    }
    
    if(global.counter1 &lt;= 0){
        _canAttack1 = true;
    }
    if(global.counter2 &lt;= 0){
        _canAttack2 = true;
    }
    if(global.counter3 &lt;= 0){
        _canAttack3 = true;
    }
}

alarm[0] = 1*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Platform Physics
var rightKey = keyboard_check(ord('D'));
var leftKey = keyboard_check(ord('A'));
var jumpKey = keyboard_check_pressed(ord('W'));
downKey = keyboard_check_pressed(ord('S'));
var restartKey = keyboard_check(ord('R'));
var menuKey = keyboard_check(ord('M'));

// Check for the ground
if (place_meeting(x, y+1, obj_AbstractWall)) {
    _isJumping = false;
    _vSpeed = 0;
    _currentJump = _numberOfJumps;
} else {
    _isIdle = false;
    _isJumping = true;
    // Gravity
    if (_vSpeed &lt; _jumpSpeed) {
        _vSpeed += _gravity;
    }
}

if(!global.pause){  
    if(!_isDead){
        if(health &lt;= 0){
            _isDead = true;
            global.gameOver = true;
        }
        
        _hSpeedFinal = _hSpeed+_hSpeedCarry;
        _hSpeedCarry = 0;
          
        if (jumpKey &amp;&amp; _currentJump &gt; 0){
            audio_play_sound(snd_jump, 10, false);
            _currentJump --;
            _vSpeed = -_jumpSpeed;
        }
        
        // Moving right
        if (rightKey) {
            _isIdle = false;
            _isWalking = true;
            _side = 1;
            _hSpeed = _velocity;
        }
        
        // Moving left
        if (leftKey) {
            _isIdle = false;
            _isWalking = true;
            _side = -1;
            _hSpeed = -_velocity;
        }
        
        // Check for not moving
        if ((!rightKey &amp;&amp; !leftKey) || (rightKey &amp;&amp; leftKey)) {
            _isIdle = true;
            _isWalking = false;
            _hSpeed = 0;
        }
        if(_isJumping){
            _isIdle = false;
        }
        
        // Horizontal collisions
        if (place_meeting(x+_hSpeedFinal, y, obj_AbstractWall)) {
            while (!place_meeting(x+sign(_hSpeedFinal), y, obj_AbstractWall)) {
                x+= sign(_hSpeedFinal);
            }
            _hSpeedFinal = 0;
        }
        
        // Move horizontally
        x += _hSpeedFinal;
           
        // Vertical collisions
        if (place_meeting(x, y+_vSpeed, obj_AbstractWall)) {
            while (!place_meeting(x, y+sign(_vSpeed), obj_AbstractWall)) {
                y+= sign(_vSpeed);
            }
            _vSpeed = 0;
        }
        
        // Move vertically
        y += _vSpeed;
        
    }else{
        if(restartKey){
            global.restart = true;
        }
        if(menuKey){
            global.menu = true;
        }
    }
        
    background_hspeed[0] = (_hSpeedFinal/10)*-1;
    background_hspeed[2] = (_hSpeedFinal/8)*-1;
    background_hspeed[3] = (_hSpeedFinal/6)*-1;
    
}else{
    if(restartKey){
        global.restart = true;
    }
    if(menuKey){
        global.menu = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprites Controler
if(!global.pause){
    if(!_isDead){
        if(!_isHurt){
            sprite_index = spr_player;
        }else{
            sprite_index = spr_playerhurt;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alpha controller
if(!global.pause){
    if(_invinsible){
        if(!_alphaRise){
            if(_alpha &gt; 0){
                _alpha -= 0.2;
            }else{
                _alphaRise = true;
            }
        }else{
            if(_alpha &lt; 1.0){
                _alpha += 0.2;
            }else{
                _alphaRise = false;
            }    
        }
    }else{
        _alpha = 1.0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Collision
if(!global.pause){
    if(!_isDead){
        if(!_invinsible){
            if(place_meeting(x+1, y, obj_AbstractEnemy) || place_meeting(x-1, y, obj_AbstractEnemy)){
                if(health &gt; 0)
                    audio_play_sound(snd_die, 10, false);
                    health --;
                _vSpeed = -_jumpSpeed;
                
                if(_side &gt; 0){
                    _hSpeed -= 25;
                }
                
                if(_side &lt; 0){
                    _hSpeed += 25
                }
                _invinsible= true;
                _isHurt = true;
                alarm[1] = 2*room_speed;
            }
            if(place_meeting(x, y-1, obj_dead)){
                while (!place_meeting(x, y+sign(_vSpeed), obj_dead)) {
                    y+= sign(_vSpeed);
                }
                audio_play_sound(snd_die, 10, false);
                health = 0;
            }
            if(place_meeting(x, y, obj_portal)){
                if(global.level &gt;= 25){
                    global.win = true;
                    health = 0;
                }
            }
        }
    }else{
        _vSpeedFinal = 0;
        _hSpeedFinal = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!_isDead){
    draw_self();
    image_alpha = _alpha;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!_isDead){
    if(!global.pause){
        audio_play_sound(snd_pause,10,false);
        global.pause = true;
    }else{
        global.pause = false;        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var keyUP = keyboard_check(ord('W'));
var keyDOWN = keyboard_check(ord('S'));
global.shotside = 1;
if(!global.pause){
    if(!_isDead){
        if(_canAttack2 &amp;&amp; !_isAttacking &amp;&amp; !_isHurt){
            _isAttacking = true;
            _attackType = 2;
            if(!keyUP &amp;&amp; !keyDOWN){
                if(_side == -1){
                    global.shotside = 4;
                    instance_create(x-32, y, obj_attack_2);        
                }
                
                if(_side == 1){
                    global.shotside = 2;
                    instance_create(x+32, y, obj_attack_2);        
                }
            }
            
            if(keyUP){
                global.shotside = 1;
                instance_create(x, y-64, obj_attack_2);
            }
            if(keyDOWN){
                global.shotside = 3;
                instance_create(x, y+64, obj_attack_2);
            }
            audio_play_sound(snd_attack2, 10, false);
            global.counter2 = _attack2Delay;
            _canAttack2 = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var keyUP = keyboard_check(ord('W'));
var keyDOWN = keyboard_check(ord('S'));
global.shotside = 1;

if(!global.pause){
    if(!_isDead){
        if(_canAttack3 &amp;&amp; !_isAttacking &amp;&amp; !_isHurt){
            _isAttacking = true;
            _attackType = 2;
            if(!keyUP &amp;&amp; !keyDOWN){
                if(_side == -1){
                    global.shotside = 4;
                    instance_create(x-32, y, obj_attack_3);        
                }
                
                if(_side == 1){
                    global.shotside = 2;
                    instance_create(x+32, y, obj_attack_3);        
                }
            }
            
            if(keyUP){
                global.shotside = 1;
                instance_create(x, y-64, obj_attack_3);
            }
            if(keyDOWN){
                global.shotside = 3;
                instance_create(x, y+64, obj_attack_3);
            }
            audio_play_sound(snd_attack3, 10, false);
            global.counter3 = _attack3Delay;
            _canAttack3 = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause){
    if(!_isDead){
        if(!_isHurt){
            switch(global.currentItem){
                case 1:
                    if(health &lt; global._totalHealth)
                        health++;        
                    audio_play_sound(snd_apple, 10, false);
                    break;
                case 2:
                    health = global._totalHealth;
                    audio_play_sound(snd_potion, 10, false);
                    break;
                default:
                //do notthing
                    break;
            }
            
            global.currentItem = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var keyUP = keyboard_check(ord('W'));
var keyDOWN = keyboard_check(ord('S'));
global.shotside = 1;

if(!global.pause){
    if(!_isDead){
        if(_canAttack1 &amp;&amp; !_isAttacking &amp;&amp; !_isHurt){
            _isAttacking = true;
            _attackType = 1;
            if(!keyUP &amp;&amp; !keyDOWN){
                if(_side == -1){
                    global.shotside = 4;
                    instance_create(x-32, y, obj_attack_1);        
                }
                
                if(_side == 1){
                    global.shotside = 2;
                    instance_create(x+32, y, obj_attack_1);        
                }
            }
            
            if(keyUP){
                global.shotside = 1;
                instance_create(x, y-64, obj_attack_1);
            }
            if(keyDOWN){
                global.shotside = 3;
                instance_create(x, y+64, obj_attack_1);
            }
            audio_play_sound(snd_attack1, 10, false);
            global.counter1 = _attack1Delay;
             _canAttack1 = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause){
    _isAttacking = false;
    _attackType = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause){
    _isAttacking = false;
    _attackType = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.pause){
    _isAttacking = false;
    _attackType = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
